/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <0>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
            hold-trigger-on-release;
        };

        hml_layer: hml_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HML_LAYER";
            bindings = <&lt>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };

        mto: mto {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold Tab Layer";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        ClearBTprofile {
            bindings = <&bt BT_CLR>;
            key-positions = <24 25 6>;
        };

        BTprofile0 {
            bindings = <&bt BT_DISC 0>;
            key-positions = <24 25 7>;
        };

        BTprofile1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <24 25 8>;
        };

        BTprofile2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <24 25 9>;
        };

        BTprofile3 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <24 25 10>;
        };

        BTprofile4 {
            bindings = <&bt BT_SEL 4>;
            key-positions = <24 25 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W        &kp E           &kp R              &kp T           &kp Y    &kp U               &kp I         &kp O             &kp P     &kp LEFT_BRACKET
&kp LCTRL  &kp A  &hml LALT S  &hml LCTRL D    &hml LEFT_SHIFT F  &kp G           &kp H    &hmr RIGHT_SHIFT J  &hmr RCTRL K  &hmr RIGHT_ALT L  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X        &kp C           &kp V              &kp B           &kp N    &kp M               &kp COMMA     &kp DOT           &kp FSLH  &kp ESC
                               &lt 4 LEFT_WIN  &mo 1              &mto 3 SPACE    &kp RET  &mto 2 BACKSPACE    &kp LALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp EQUAL
&trans     &trans  &trans  &trans    &trans  &trans       &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT  &trans  &trans  &trans    &trans  &trans       &trans    &trans    &trans    &trans     &trans  &trans
                           &kp LGUI  &trans  &kp SPACE    &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp PLUS
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        Numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_MULTIPLY  &kp N7        &kp N8        &kp N9        &kp KP_SUBTRACT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_DIVIDE    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER        &trans
                        &trans  &trans  &trans    &trans           &kp N0        &kp COMMA
            >;
        };

        German {
            bindings = <
&trans  &trans    &trans     &trans  &trans  &trans    &trans  &kp LEFT_BRACKET  &trans  &kp SEMI  &trans  &trans
&trans  &kp APOS  &kp MINUS  &trans  &trans  &trans    &trans  &trans            &trans  &trans    &trans  &trans
&trans  &trans    &trans     &trans  &trans  &trans    &trans  &trans            &trans  &trans    &trans  &trans
                             &trans  &trans  &trans    &trans  &trans            &trans
            >;
        };
    };
};
